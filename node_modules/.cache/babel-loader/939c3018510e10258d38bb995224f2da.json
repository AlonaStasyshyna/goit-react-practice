{"ast":null,"code":"var _jsxFileName = \"/Users/astasyshyna/Documents/GitHub/goit-react-practice/src/components/User/User.jsx\";\nimport PropTypes from 'prop-types';\nimport { Paragraf } from './User.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const User = _ref => {\n  let {\n    user: {\n      name,\n      email\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paragraf, {\n      children: [\"Name: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paragraf, {\n      children: [\"Email: \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = User;\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/astasyshyna/Documents/GitHub/goit-react-practice/src/components/User/User.jsx"],"names":["PropTypes","Paragraf","User","user","name","email","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,SAASC,QAAT,QAAyB,eAAzB;;;AAEA,OAAO,MAAMC,IAAI,GAAG,QAA+B;AAAA,MAA9B;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAR,GAA8B;AAC/C,sBACQ;AAAA,4BACA,QAAC,QAAD;AAAA,2BAAiBD,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,QAAD;AAAA,4BAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADR;AAMH,CAPM;KAAMH,I;AASbA,IAAI,CAACI,SAAL,GAAiB;AACbH,EAAAA,IAAI,EAAEH,SAAS,CAACO,KAAV,CAAgB;AAClBH,IAAAA,IAAI,EAAEJ,SAAS,CAACQ,MAAV,CAAiBC,UADL;AAElBJ,IAAAA,KAAK,EAAEL,SAAS,CAACQ,MAAV,CAAiBC;AAFN,GAAhB,EAGHA;AAJU,CAAjB","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { Paragraf } from './User.styled';\n\nexport const User = ({ user: { name, email } }) => {\n    return (\n            <>\n            <Paragraf>Name: {name}</Paragraf>\n            <Paragraf>Email: {email}</Paragraf>\n            </>\n    );\n}\n\nUser.propTypes = {\n    user: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n    }).isRequired\n}"]},"metadata":{},"sourceType":"module"}